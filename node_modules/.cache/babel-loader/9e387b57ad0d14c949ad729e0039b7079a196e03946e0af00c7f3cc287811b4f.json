{"ast":null,"code":"// src/context/AuthContext.js\nimport React,{createContext,useContext,useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();const users=[{id:\"1\",role:\"Admin\",email:\"admin@entnt.in\",password:\"admin123\"},{id:\"2\",role:\"Patient\",email:\"john@entnt.in\",password:\"patient123\",patientId:\"p1\"}];export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(()=>{const saved=localStorage.getItem(\"user\");return saved?JSON.parse(saved):null;});const login=(email,password)=>{const found=users.find(u=>u.email===email&&u.password===password);if(found){setUser(found);localStorage.setItem(\"user\",JSON.stringify(found));return true;}return false;};const logout=()=>{setUser(null);localStorage.removeItem(\"user\");};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","users","id","role","email","password","patientId","AuthProvider","_ref","children","user","setUser","saved","localStorage","getItem","JSON","parse","login","found","find","u","setItem","stringify","logout","removeItem","Provider","value","useAuth"],"sources":["C:/Users/Sameer Ahmed Malik/Downloads/entnt-dental-dashboard/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\n\nconst AuthContext = createContext();\n\nconst users = [\n  { id: \"1\", role: \"Admin\", email: \"admin@entnt.in\", password: \"admin123\" },\n  { id: \"2\", role: \"Patient\", email: \"john@entnt.in\", password: \"patient123\", patientId: \"p1\" }\n];\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(() => {\n    const saved = localStorage.getItem(\"user\");\n    return saved ? JSON.parse(saved) : null;\n  });\n\n  const login = (email, password) => {\n    const found = users.find(u => u.email === email && u.password === password);\n    if (found) {\n      setUser(found);\n      localStorage.setItem(\"user\", JSON.stringify(found));\n      return true;\n    }\n    return false;\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"user\");\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAEnC,KAAM,CAAAO,KAAK,CAAG,CACZ,CAAEC,EAAE,CAAE,GAAG,CAAEC,IAAI,CAAE,OAAO,CAAEC,KAAK,CAAE,gBAAgB,CAAEC,QAAQ,CAAE,UAAW,CAAC,CACzE,CAAEH,EAAE,CAAE,GAAG,CAAEC,IAAI,CAAE,SAAS,CAAEC,KAAK,CAAE,eAAe,CAAEC,QAAQ,CAAE,YAAY,CAAEC,SAAS,CAAE,IAAK,CAAC,CAC9F,CAED,MAAO,MAAM,CAAAC,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGf,QAAQ,CAAC,IAAM,CACrC,KAAM,CAAAgB,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC1C,MAAO,CAAAF,KAAK,CAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,CAAG,IAAI,CACzC,CAAC,CAAC,CAEF,KAAM,CAAAK,KAAK,CAAGA,CAACb,KAAK,CAAEC,QAAQ,GAAK,CACjC,KAAM,CAAAa,KAAK,CAAGjB,KAAK,CAACkB,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAChB,KAAK,GAAKA,KAAK,EAAIgB,CAAC,CAACf,QAAQ,GAAKA,QAAQ,CAAC,CAC3E,GAAIa,KAAK,CAAE,CACTP,OAAO,CAACO,KAAK,CAAC,CACdL,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAEN,IAAI,CAACO,SAAS,CAACJ,KAAK,CAAC,CAAC,CACnD,MAAO,KAAI,CACb,CACA,MAAO,MAAK,CACd,CAAC,CAED,KAAM,CAAAK,MAAM,CAAGA,CAAA,GAAM,CACnBZ,OAAO,CAAC,IAAI,CAAC,CACbE,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC,CACjC,CAAC,CAED,mBACEzB,IAAA,CAACC,WAAW,CAACyB,QAAQ,EAACC,KAAK,CAAE,CAAEhB,IAAI,CAAEO,KAAK,CAAEM,MAAO,CAAE,CAAAd,QAAA,CAClDA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAkB,OAAO,CAAGA,CAAA,GAAMhC,UAAU,CAACK,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}