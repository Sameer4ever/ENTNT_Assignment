{"ast":null,"code":"import React from\"react\";import{BrowserRouter as Router,Routes,Route,Navigate}from\"react-router-dom\";import Login from\"./pages/Login\";import Dashboard from\"./pages/Dashboard\";import Patients from\"./pages/Patients\";import Incidents from\"./pages/Incidents\";import Calendar from\"./pages/Calendar\";import PatientView from\"./pages/PatientView\";import{AuthProvider,useAuth}from\"./context/AuthContext\";// Route wrapper to protect routes based on login and role\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PrivateRoute=_ref=>{let{children,role}=_ref;const{user}=useAuth();if(!user)return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});if(role&&user.role!==role)return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});return children;};function App(){return/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(PrivateRoute,{role:\"Admin\",children:/*#__PURE__*/_jsx(Dashboard,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/patients\",element:/*#__PURE__*/_jsx(PrivateRoute,{role:\"Admin\",children:/*#__PURE__*/_jsx(Patients,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/incidents\",element:/*#__PURE__*/_jsx(PrivateRoute,{role:\"Admin\",children:/*#__PURE__*/_jsx(Incidents,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/calendar\",element:/*#__PURE__*/_jsx(PrivateRoute,{role:\"Admin\",children:/*#__PURE__*/_jsx(Calendar,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/myprofile\",element:/*#__PURE__*/_jsx(PrivateRoute,{role:\"Patient\",children:/*#__PURE__*/_jsx(PatientView,{})})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\"})})]})})});}export default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","Login","Dashboard","Patients","Incidents","Calendar","PatientView","AuthProvider","useAuth","jsx","_jsx","jsxs","_jsxs","PrivateRoute","_ref","children","role","user","to","App","path","element"],"sources":["C:/Users/Sameer Ahmed Malik/Downloads/entnt-dental-dashboard/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Patients from \"./pages/Patients\";\nimport Incidents from \"./pages/Incidents\";\nimport Calendar from \"./pages/Calendar\";\nimport PatientView from \"./pages/PatientView\";\nimport { AuthProvider, useAuth } from \"./context/AuthContext\";\n\n// Route wrapper to protect routes based on login and role\nconst PrivateRoute = ({ children, role }) => {\n  const { user } = useAuth();\n  if (!user) return <Navigate to=\"/login\" />;\n  if (role && user.role !== role) return <Navigate to=\"/\" />;\n  return children;\n};\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n\n          {/* Admin-only routes */}\n          <Route path=\"/\" element={<PrivateRoute role=\"Admin\"><Dashboard /></PrivateRoute>} />\n          <Route path=\"/patients\" element={<PrivateRoute role=\"Admin\"><Patients /></PrivateRoute>} />\n          <Route path=\"/incidents\" element={<PrivateRoute role=\"Admin\"><Incidents /></PrivateRoute>} />\n          <Route path=\"/calendar\" element={<PrivateRoute role=\"Admin\"><Calendar /></PrivateRoute>} />\n\n          {/* Patient-only route */}\n          <Route path=\"/myprofile\" element={<PrivateRoute role=\"Patient\"><PatientView /></PrivateRoute>} />\n\n          {/* Catch-all (optional): redirect to dashboard or login */}\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CACnF,MAAO,CAAAC,KAAK,KAAM,eAAe,CACjC,MAAO,CAAAC,SAAS,KAAM,mBAAmB,CACzC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,SAAS,KAAM,mBAAmB,CACzC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,WAAW,KAAM,qBAAqB,CAC7C,OAASC,YAAY,CAAEC,OAAO,KAAQ,uBAAuB,CAE7D;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,QAAQ,CAAEC,IAAK,CAAC,CAAAF,IAAA,CACtC,KAAM,CAAEG,IAAK,CAAC,CAAGT,OAAO,CAAC,CAAC,CAC1B,GAAI,CAACS,IAAI,CAAE,mBAAOP,IAAA,CAACV,QAAQ,EAACkB,EAAE,CAAC,QAAQ,CAAE,CAAC,CAC1C,GAAIF,IAAI,EAAIC,IAAI,CAACD,IAAI,GAAKA,IAAI,CAAE,mBAAON,IAAA,CAACV,QAAQ,EAACkB,EAAE,CAAC,GAAG,CAAE,CAAC,CAC1D,MAAO,CAAAH,QAAQ,CACjB,CAAC,CAED,QAAS,CAAAI,GAAGA,CAAA,CAAG,CACb,mBACET,IAAA,CAACH,YAAY,EAAAQ,QAAA,cACXL,IAAA,CAACb,MAAM,EAAAkB,QAAA,cACLH,KAAA,CAACd,MAAM,EAAAiB,QAAA,eACLL,IAAA,CAACX,KAAK,EAACqB,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAEX,IAAA,CAACT,KAAK,GAAE,CAAE,CAAE,CAAC,cAG3CS,IAAA,CAACX,KAAK,EAACqB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEX,IAAA,CAACG,YAAY,EAACG,IAAI,CAAC,OAAO,CAAAD,QAAA,cAACL,IAAA,CAACR,SAAS,GAAE,CAAC,CAAc,CAAE,CAAE,CAAC,cACpFQ,IAAA,CAACX,KAAK,EAACqB,IAAI,CAAC,WAAW,CAACC,OAAO,cAAEX,IAAA,CAACG,YAAY,EAACG,IAAI,CAAC,OAAO,CAAAD,QAAA,cAACL,IAAA,CAACP,QAAQ,GAAE,CAAC,CAAc,CAAE,CAAE,CAAC,cAC3FO,IAAA,CAACX,KAAK,EAACqB,IAAI,CAAC,YAAY,CAACC,OAAO,cAAEX,IAAA,CAACG,YAAY,EAACG,IAAI,CAAC,OAAO,CAAAD,QAAA,cAACL,IAAA,CAACN,SAAS,GAAE,CAAC,CAAc,CAAE,CAAE,CAAC,cAC7FM,IAAA,CAACX,KAAK,EAACqB,IAAI,CAAC,WAAW,CAACC,OAAO,cAAEX,IAAA,CAACG,YAAY,EAACG,IAAI,CAAC,OAAO,CAAAD,QAAA,cAACL,IAAA,CAACL,QAAQ,GAAE,CAAC,CAAc,CAAE,CAAE,CAAC,cAG3FK,IAAA,CAACX,KAAK,EAACqB,IAAI,CAAC,YAAY,CAACC,OAAO,cAAEX,IAAA,CAACG,YAAY,EAACG,IAAI,CAAC,SAAS,CAAAD,QAAA,cAACL,IAAA,CAACJ,WAAW,GAAE,CAAC,CAAc,CAAE,CAAE,CAAC,cAGjGI,IAAA,CAACX,KAAK,EAACqB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEX,IAAA,CAACV,QAAQ,EAACkB,EAAE,CAAC,GAAG,CAAE,CAAE,CAAE,CAAC,EAC1C,CAAC,CACH,CAAC,CACG,CAAC,CAEnB,CAEA,cAAe,CAAAC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}